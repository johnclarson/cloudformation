{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "SIGMA AWS CloudFormation Template Cloudera cluster on CentOS 7",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Default": "jlarson-uc2s",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "MasterHostName": {
      "Description": "Name of Cloudera master (minus prefix and number)",
      "Default": "cdm",
      "Type": "String"
    },
    "SlaveHostName": {
      "Description": "Name of Cloudera master (minus prefix and number)",
      "Default": "ephm",
      "Type": "String"
    },
    "DomainName": {
      "Description": "Domain name for the Cloudera cluster",
      "Default": "sigma.dsci",
      "Type": "String"
    },
    "DNSServer": {
      "Description": "DNS server for accessing yum repos",
      "Default": "172.24.0.2",
      "Type": "String"
    },
    "VPCid": {
      "Description": "VPC where the Cloudera cluster will be built",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "must be the name of a valid VPC"
    },
    "InstanceSubnet": {
      "Description": "Subnet ID of build the Cloudera cluster in",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "must be the name of a valid subnet"
    },
    "DBSubnetA": {
      "Description": "First subnet for multi-az DB",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "must be the name of a valid subnet"
    },
    "DBSubnetB": {
      "Description": "Second subnet for multi-az DB",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "must be the name of a valid subnet"
    },
    "CFNRpm": {
      "Default": "aws-cfn-bootstrap.rpm",
      "Description": "RPM name for AWS CFN bootstrap found in ForemanS3Bucket",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z0-9\\-\\.]+",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters and hyphens."
    },
      "BuildS3Bucket": {
      "Default": "sigma-build",
      "Description": "S3 bucket for content retrieval",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z0-9\\-\\.]+",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters and hyphens."
    },
    "OracleJDKRPM": {
      "Default": "jdk-8u112-linux-x64.rpm",
      "Description": "Name of Oracle JDK RPM in the  ContentS3Bucket",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z0-9\\-\\.]+",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters and hyphens."
    },
    "CentOSBaseRepoURL": {
      "Default": "http://mirror.centos.org/centos/7/os/x86_64/",
      "Description": "URL of base Centos yum repo",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64"
    },
    "CentOSUpdatesRepoURL": {
      "Default": "http://mirror.centos.org/centos/7/updates/x86_64/",
      "Description": "URL of updates Centos yum repo",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "128"
    },
    "EPELRepoURL": {
      "Default": "https://dl.fedoraproject.org/pub/epel/7/x86_64/",
      "Description": "URL of EPEL yum repo",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64"
    },
    "ClouderaRepoURL": {
      "Default": "https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5/",
      "Description": "URL of Cloudera yum repo",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64"
    },
    "MasterAMI": {
      "Default": "ami-c7866ed1",
      "Description": "CentOS 7 AMI to use for Cloudera master",
      "Type": "String",
      "MinLength": "12",
      "MaxLength": "12",
      "AllowedPattern": "ami-[a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with ami- and contain only alphanumeric characters."
    },
    "SlaveAMI": {
      "Default": "ami-d0fb11c6",
      "Description": "CentOS 7 AMI to use for Cloudera Slave",
      "Type": "String",
      "MinLength": "12",
      "MaxLength": "12",
      "AllowedPattern": "ami-[a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with ami- and contain only alphanumeric characters."
    },
    "DBName": {
      "Default": "scm",
      "Description": "MySQL database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBUser": {
      "Default": "scm",
      "Description": "Username for MySQL database access",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "NoEcho": "true",
      "Default": "cloudera2017",
      "Description": "Password for MySQL database access",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },
    "DBAllocatedStorage": {
      "Default": "5",
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "1024",
      "ConstraintDescription": "must be between 5 and 1024Gb."
    },
    "DBInstanceClass": {
      "Description": "The database instance type",
      "Type": "String",
      "Default": "db.t2.small",
      "AllowedValues": [
        "db.t1.micro",
        "db.m1.small",
        "db.m1.medium",
        "db.m1.large",
        "db.m1.xlarge",
        "db.m2.xlarge",
        "db.m2.2xlarge",
        "db.m2.4xlarge",
        "db.m3.medium",
        "db.m3.large",
        "db.m3.xlarge",
        "db.m3.2xlarge",
        "db.m4.large",
        "db.m4.xlarge",
        "db.m4.2xlarge",
        "db.m4.4xlarge",
        "db.m4.10xlarge",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge",
        "db.m2.xlarge",
        "db.m2.2xlarge",
        "db.m2.4xlarge",
        "db.cr1.8xlarge",
        "db.t2.micro",
        "db.t2.small",
        "db.t2.medium",
        "db.t2.large"
      ],
      "ConstraintDescription": "must select a valid database instance type."
    },
    "MultiAZDatabase": {
      "Default": "true",
      "Description": "Create a Multi-AZ MySQL Amazon RDS database instance",
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "must be either true or false."
    },
    "MasterInstanceType": {
      "Description": "Cloudera Master EC2 instance type",
      "Type": "String",
      "Default": "m4.10xlarge",
      "AllowedValues": [
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SlaveInstanceType": {
      "Description": "Cloudera Slave EC2 instance type",
      "Type": "String",
      "Default": "d2.xlarge",
      "AllowedValues": [
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SSHLocation": {
      "Description": " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Resources": {
    "ClouderaInstanceIAMRole": {
    "Type": "AWS::IAM::Role",
    "Properties": {
      "AssumeRolePolicyDocument": {
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com"
              ]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }
        ]
      },
      "Path": "/",
      "Policies": [
        {
          "PolicyName": "BuildS3access",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": "s3:ListAllMyBuckets",
                "Resource": "arn:aws:s3:::*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListBucket",
                  "s3:GetBucketLocation"
                ],
                "Resource": { "Fn::Join" : [
                   "", [ "arn:aws:s3:::", { "Ref": "BuildS3Bucket" } ]
                   ] 
                }
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:PutObject",
                  "s3:DeleteObject"
                ],
                "Resource": { "Fn::Join" : [
                   "", [ "arn:aws:s3:::", { "Ref": "BuildS3Bucket" }, "/*" ]
                   ] 
                }
              }
            ]
          }
        }
      ]
    }
    },
    "ClouderaInstanceIAMProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "ClouderaInstanceIAMRole"
          }
        ]
      }
    },
    "MasterInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "InstallAndRun": [
              "Install",
              "Configure",
              "Run"
            ]
          },
          "Install": {
            "packages": {
              "yum": {
                "cloudera-manager-daemons": [],
                "cloudera-manager-agent": [],
                "mysql-connector-java": [],
                "cloudera-manager-server": []
              }
            },
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.MasterInstance.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "         --resource MasterInstance ",
                      "         --configsets InstallAndRun ",
                      "         --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                }
              },
              "/etc/cloudera-scm-server/db.properties": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "com.cloudera.cmf.db.type=mysql\n",
                      "com.cloudera.cmf.db.host=",
                      {
                        "Fn::GetAtt": [
                          "MySQLDatabase",
                          "Endpoint.Address"
                        ]
                      },
                      ":3306\n",
                      "com.cloudera.cmf.db.name=",
                       {
                        "Ref": "DBName"
                       },
                       "\n",
                      "com.cloudera.cmf.db.user=",
                       {
                        "Ref": "DBUser"
                       },
                       "\n",
                      "com.cloudera.cmf.db.password=",
                       {
                        "Ref": "DBPassword"
                       },
                       "\n",
                       "com.cloudera.cmf.db.setupType=EXTERNAL\n"
                    ]
                  ]
                }
              }
            },
            "services": {
              "cfn-hup": {
                "enabled": "true",
                "ensureRunning": "true",
                "files": [
                  "/etc/cfn/cfn-hup.conf",
                  "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                ]
              }
            }
          },
          "Configure": {
            "commands": {
              "01_download_oracle_jdk": {
                "command": {
                  "Fn::Join": [ 
                    "",
                    [
                      "/bin/aws s3 cp s3://",
                      {
                        "Ref": "BuildS3Bucket"
                      },
                      "/",
                      {
                        "Ref": "OracleJDKRPM"
                      },
                      " /tmp"
                    ]
                  ]
                }
              },
              "02_install_oracle_jdk": {
                "command": {
                  "Fn::Join": [ 
                    "",
                    [
                      "/usr/bin/rpm -i /tmp/",
                      {
                        "Ref": "OracleJDKRPM"
                      }
                    ]
                  ]
                }
              }
            }
          },
          "Run": {
            "services": {
              "cloudera-scm-server": {
                "enabled": "true",
                "ensureRunning": "true"
              },
              "cloudera-scm-agent": {
                "enabled": "true",
                "ensureRunning": "true"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Ref": "MasterAMI"
        },
        "InstanceType": {
          "Ref": "MasterInstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : "Cloudera Master (TEST)"
          }
        ],
        "IamInstanceProfile": {
          "Ref": "ClouderaInstanceIAMProfile"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "True",
            "DeleteOnTermination": "True",
            "SubnetId": {
              "Ref": "InstanceSubnet"
            },
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "ClouderaMasterSecurityGroup"
              }
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "hostname c-",
                {
                  "Ref": "MasterHostName"
                },
                "-1.",
                {
                  "Ref": "DomainName"
                },
                "\n",
                "rm -rf /etc/resolv.conf\n",
                "echo \"domain ",
                {
                  "Ref": "DomainName"
                },
                "\n",
                "search ",
                {
                  "Ref": "DomainName"
                },
                "\n",
                "nameserver ",
                {
                  "Ref": "DNSServer"
                },
                "\" >> /etc/resolv.conf\n",
                "/bin/sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux\n",
                "echo \"c-",
                {
                  "Ref": "MasterHostName"
                },
                "-1.",
                {
                  "Ref": "DomainName"
                },
                "\" > /etc/hostname\n",
                "echo \"HOSTNAME=c-",
                {
                  "Ref": "MasterHostName"
                },
                "-1.",
                {
                  "Ref": "DomainName"
                },
                "\" >> /etc/sysconfig/network\n",
                "echo \"preserve_hostname: true\" >> /etc/cloud/cloud.cfg\n",
                "# Set up yum repos\n",
                "rm -rf /etc/yum.repos.d/*\n",
                "cat << EOF > /etc/yum.repos.d/CentOS.repo\n",
                "[CentOSBase]\n",
                "name=CentOSBase\n",
                "baseurl=",
                {
                  "Ref": "CentOSBaseRepoURL"
                },
                "\n",
                "enabled=1\n",
                "gpgcheck=0\n",
                "\n",
                "[CentOSUpdates]\n",
                "name=CentOSUpdates\n",
                "baseurl=",
                {
                  "Ref": "CentOSUpdatesRepoURL"
                },
                "\n",
                "enabled=1\n",
                "gpgcheck=0\n",
                "EOF\n",
                "cat << EOF > /etc/yum.repos.d/EPEL.repo\n",
                "[EPEL]\n",
                "name=EPEL\n",
                "baseurl=",
                {
                  "Ref": "EPELRepoURL"
                },
                "\n",
                "enabled=1\n",
                "gpgcheck=0\n",
                "EOF\n",
                "cat << EOF > /etc/yum.repos.d/Cloudera.repo\n",
                "[Cloudera]\n",
                "name=Cloudera\n",
                "baseurl=",
                {
                  "Ref": "ClouderaRepoURL"
                },
                "\n",
                "enabled=1\n",
                "gpgcheck=0\n",
                "EOF\n",
                "yum -y install pystache\n",
                "yum -y install python-daemon\n",
                "yum -y install awscli\n",
                "/bin/aws s3 cp s3://",
                {
                  "Ref": "BuildS3Bucket"
                },
                "/",
                {
                  "Ref": "CFNRpm"
                },
                " /tmp\n",
                "rpm -i /tmp/",
                {
                  "Ref": "CFNRpm"
                },
                "\n",
                "/sbin/chkconfig --add cfn-hup\n",
                "# Install the files and packages from the metadata\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource MasterInstance ",
                "         --configsets InstallAndRun ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "# Signal the status from cfn-init\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource MasterInstance ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT20M"
        }
      }
    },
    "ClouderaMasterSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable Cloudera Master ports",
        "VpcId": {
          "Ref": "VPCid"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "7180",
            "ToPort": "7180",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "7183",
            "ToPort": "7183",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "7182",
            "ToPort": "7182",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9000",
            "ToPort": "9000",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "7184",
            "ToPort": "7184",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "7185",
            "ToPort": "7185",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      }
    },
    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Open database for access",
        "VpcId": {
          "Ref": "VPCid"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Availability Zones for Cloudera Master RDS DB",
        "SubnetIds": [
          {
            "Ref": "DBSubnetA"
          },
          {
            "Ref": "DBSubnetB"
          }
        ]
      }
    },
    "MySQLDatabase": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "MySQL",
        "DBInstanceIdentifier": "cloudera-mgr",
        "DBName": {
          "Ref": "DBName"
        },
        "MultiAZ": {
          "Ref": "MultiAZDatabase"
        },
        "MasterUsername": {
          "Ref": "DBUser"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "AllocatedStorage": {
          "Ref": "DBAllocatedStorage"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "DBSecurityGroup",
              "GroupId"
            ]
          }
        ]
      }
    }
  }
}
